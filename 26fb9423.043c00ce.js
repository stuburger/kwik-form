/*! For license information please see 26fb9423.043c00ce.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{148:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return u})),t.d(n,"default",(function(){return b}));var a=t(2),r=t(9),o=(t(0),t(180)),i=t(192),s=t(190),c={id:"arrays-and-objects",title:"Arrays and nested objects",sidebar_label:"Arrays and nested objects"},l={id:"arrays-and-objects",title:"Arrays and nested objects",description:"Working with complex data structures in Yafl is made easy by using the ` and  components which are used to create nested object and array structures, respectively. The  component is similar to what is often called a  in other form libraries but with one key difference which we'll see in a bit. There is no analogous component for `, however!",source:"@site/docs/arrays-and-objects.md",permalink:"/yafl/docs/arrays-and-objects",sidebar_label:"Arrays and nested objects",sidebar:"main",previous:{title:"Validating user input",permalink:"/yafl/docs/validation"},next:{title:"Using createFormContext()",permalink:"/yafl/docs/createFormContext"}},u=[{value:"A note on <code>&quot;string.paths&quot;</code>",id:"a-note-on-stringpaths",children:[]},{value:"The <code>&lt;Repeat /&gt;</code> component",id:"the-repeat--component",children:[{value:"Example",id:"example",children:[]}]},{value:"The <code>&lt;Section /&gt;</code> component",id:"the-section--component",children:[{value:"Example",id:"example-1",children:[]}]}],p={rightToc:u};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Working with complex data structures in Yafl is made easy by using the ",Object(o.b)("inlineCode",{parentName:"p"},"<Section />")," and ",Object(o.b)("inlineCode",{parentName:"p"},"<Repeat />")," components which are used to create nested object and array structures, respectively. The ",Object(o.b)("inlineCode",{parentName:"p"},"<Repeat />")," component is similar to what is often called a ",Object(o.b)("inlineCode",{parentName:"p"},"<FieldArray />")," in other form libraries but with one key difference which we'll see in a bit. There is no analogous component for ",Object(o.b)("inlineCode",{parentName:"p"},"<Section />"),", however!"),Object(o.b)("h2",{id:"a-note-on-stringpaths"},"A note on ",Object(o.b)("inlineCode",{parentName:"h2"},'"string.paths"')),Object(o.b)("p",null,"At this point it would be good to point out something that Yafl does differently - it does not require you to you use string paths to create complex objects and arrays in your form. You've probably seen the following syntax before: "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"<Field name={`profile.contact.addresses[${i}].code`} />\n")),Object(o.b)("p",null,'This syntax is being used to create depth in a from. But this is error prone, difficult to refactor and a hard to read. Imagine if you have to change the "shape" of your form so that the ',Object(o.b)("inlineCode",{parentName:"p"},"addresses")," array is no longer on the ",Object(o.b)("inlineCode",{parentName:"p"},"contact"),' object, but rather it is "moved up" to be a property of the ',Object(o.b)("inlineCode",{parentName:"p"},"profile")," object. We would have to modify all the field names by removing ",Object(o.b)("inlineCode",{parentName:"p"},'".contact"'),". That's okay, but we can do better! Yafl leverages React context build up these string paths for you. That said, you do not have to use these components at all, Yafl still supports using string paths if you prefer to use them or a combination of both. "),Object(o.b)("p",null,"Let's start by explaining the ",Object(o.b)("inlineCode",{parentName:"p"},"<Repeat />")," component as it is likely to be the most familiar to many of you. "),Object(o.b)("h2",{id:"the-repeat--component"},"The ",Object(o.b)("inlineCode",{parentName:"h2"},"<Repeat />")," component"),Object(o.b)("p",null,"Use the Repeat component when you require arrays or lists in your forms. "),Object(o.b)("h3",{id:"example"},"Example"),Object(o.b)(i.a,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:'title="/src/HobbyForm.js"',title:'"/src/HobbyForm.js"'}),"import React from 'react'\nimport { Form, Repeat } from 'yafl'\nimport TextInput from './TextInput'\n\nconst initialValue = {\n  hobbies: []\n}\n\nfunction SignupForm(props) {\n  function handleSubmit(value) {\n    console.log(value)\n  }\n\n  return (\n    <Form\n      initialValue={initialValue} \n      onSubmit={handleSubmit}\n    >\n      {(yafl) => (\n        <form onSubmit={yafl.submit}>\n          <Repeat name=\"hobbies\">\n            {(hobbies, { push }) => (\n              <>\n                {hobbies.map((hobby, i) => <TextInput key={i} name={i} />)}\n                <button \n                  type=\"button\" \n                  onClick={() => push('')}\n                >\n                  Add hobby\n                </button>\n              </>\n            )}\n          </Repeat>\n          <button type=\"submit\">Submit!<button>\n        </form>\n      )}\n    </Form>\n  )\n}\n"))),Object(o.b)(s.a,{value:"ts",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="/src/HobbyForm.tsx"',title:'"/src/HobbyForm.tsx"'}),"import React from 'react'\nimport { Form, Repeat } from 'yafl'\nimport TextInput from './TextInput'\n\ninterface FormValue {\n  hobbies: string[]\n}\n\nconst initialValue: FormValue = {\n  hobbies: []\n}\n\nfunction SignupForm(props: {}) {\n  function handleSubmit(value: FormValue) {\n    console.log(value)\n  }\n\n  return (\n    <Form<FormValue> \n      initialValue={initialValue} \n      onSubmit={handleSubmit}\n    >\n      {(yafl) => (\n        <form onSubmit={yafl.submit}>\n          <Repeat<string> name=\"hobbies\">\n            {(hobbies, { push }) => (\n              <>\n                {hobbies.map((hobby, i) => <TextInput<string> key={i} name={i} />)}\n                <button \n                  type=\"button\" \n                  onClick={() => push('')}\n                >\n                  Add hobby\n                </button>\n              </>\n            )}\n          </Repeat>\n          <button type=\"submit\">Submit!<button>\n        </form>\n      )}\n    </Form>\n  )\n}\n")))),Object(o.b)("p",null,"Nothing new here. We have a simple hobby form where users can continuously push hobbies (as simple string values) onto an array. If you've used FieldArrays before then this is exactly what you're used to! Notice the destructuring of ",Object(o.b)("inlineCode",{parentName:"p"},"push")," in the render prop. This utility object also contains other important array helper methods such as ",Object(o.b)("inlineCode",{parentName:"p"},"pop"),", ",Object(o.b)("inlineCode",{parentName:"p"},"shift"),", ",Object(o.b)("inlineCode",{parentName:"p"},"insert"),", ",Object(o.b)("inlineCode",{parentName:"p"},"swap")," and ",Object(o.b)("inlineCode",{parentName:"p"},"remove"),". Read more about these helper functions in the documentation for ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"./repeat"}),Object(o.b)("inlineCode",{parentName:"a"},"<Repeat />"))),Object(o.b)("p",null,"Next let's take a look the ",Object(o.b)("inlineCode",{parentName:"p"},"<Section />")," component!"),Object(o.b)("h2",{id:"the-section--component"},"The ",Object(o.b)("inlineCode",{parentName:"h2"},"<Section />")," component"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"<Section />")," component is similar to a ",Object(o.b)("inlineCode",{parentName:"p"},"<Repeat />")," but is used to represent objects - not arrays. Sections and Repeats can be used together to create very complex object structures."),Object(o.b)("h3",{id:"example-1"},"Example"),Object(o.b)(i.a,{defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:'title="/src/AddressForm.js"',title:'"/src/AddressForm.js"'}),"import React from 'react'\nimport { Form, Repeat, Section } from 'yafl'\nimport TextInput from './TextInput'\n\nconst initialValue = {\n  contact: {\n    // initialize with one empty address\n    addresses: [{\n      line1: '',\n      country: '',\n      postalCode: ''\n    }]\n  }\n}\n\nfunction SignupForm(props) {\n  function handleSubmit(value) {\n    console.log(value)\n  }\n\n  return (\n    <Form\n      initialValue={initialValue} \n      onSubmit={handleSubmit}\n    >\n      <Section name=\"contact\">\n        <Repeat name=\"addresses\">\n          {(addresses) => {\n            return addresses.map((address, i) => (\n              <Section key={i} name={i}>\n                <TextInput name=\"line1\" />\n                <TextInput name=\"country\" />\n                <TextInput name=\"postalCode\" />\n              <Section>\n            ))\n          }}\n        </Repeat>\n      </Section>\n    </Form>\n  )\n}\n"))),Object(o.b)(s.a,{value:"ts",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="/src/AddressForm.tsx"',title:'"/src/AddressForm.tsx"'}),"import React from 'react'\nimport { Form, Repeat, Section } from 'yafl'\nimport TextInput from './TextInput'\n\ninterface Address {\n  line1: string;\n  country: string;\n  postalCode: string;\n}\n\ninterface Contact {\n  addresses: Address[];\n}\n\ninterface FormValue {\n  contact: Contact;\n}\n\nconst initialValue: FormValue = {\n  contact: {\n    // initialize with one empty address\n    addresses: [{\n      line1: '',\n      country: '',\n      postalCode: ''\n    }]\n  }\n}\n\nfunction SignupForm(props: {}) {\n  function handleSubmit(value: FormValue) {\n    console.log(value)\n  }\n\n  return (\n    <Form<FormValue>\n      initialValue={initialValue} \n      onSubmit={handleSubmit}\n    >\n      <Section<Contact> name=\"contact\">\n        <Repeat<Address> name=\"addresses\">\n          {(addresses) => {\n            return addresses.map((address, i) => (\n              <Section key={i} name={i}>\n                <TextInput name=\"line1\" />\n                <TextInput name=\"country\" />\n                <TextInput name=\"postalCode\" />\n              <Section>\n            ))\n          }}\n        </Repeat>\n      </Section>\n    </Form>\n  )\n}\n")))))}b.isMDXComponent=!0},180:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return d}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),u=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=u(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,d=p["".concat(i,".").concat(m)]||p[m]||b[m]||o;return t?r.a.createElement(d,s(s({ref:n},l),{},{components:t})):r.a.createElement(d,s({ref:n},l))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},181:function(e,n,t){var a;!function(){"use strict";var t={}.hasOwnProperty;function r(){for(var e=[],n=0;n<arguments.length;n++){var a=arguments[n];if(a){var o=typeof a;if("string"===o||"number"===o)e.push(a);else if(Array.isArray(a)&&a.length){var i=r.apply(null,a);i&&e.push(i)}else if("object"===o)for(var s in a)t.call(a,s)&&a[s]&&e.push(s)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(a=function(){return r}.apply(n,[]))||(e.exports=a)}()},186:function(e,n,t){"use strict";var a=t(0),r=Object(a.createContext)({tabGroupChoices:{},setTabGroupChoices:function(){}});n.a=r},190:function(e,n,t){"use strict";var a=t(0),r=t.n(a);n.a=function(e){return r.a.createElement("div",null,e.children)}},192:function(e,n,t){"use strict";t(24),t(19),t(20);var a=t(0),r=t.n(a),o=t(186);var i=function(){return Object(a.useContext)(o.a)},s=t(181),c=t.n(s),l=t(126),u=t.n(l),p=37,b=39;n.a=function(e){var n=e.block,t=e.children,o=e.defaultValue,s=e.values,l=e.groupId,m=i(),d=m.tabGroupChoices,f=m.setTabGroupChoices,h=Object(a.useState)(o),y=h[0],j=h[1];if(null!=l){var O=d[l];null!=O&&O!==y&&j(O)}var v=function(e){j(e),null!=l&&f(l,e)},g=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:c()("tabs",{"tabs--block":n})},s.map((function(e){var n=e.value,t=e.label;return r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":y===n,className:c()("tabs__item",u.a.tabItem,{"tabs__item--active":y===n}),key:n,ref:function(e){return g.push(e)},onKeyDown:function(e){return function(e,n,t){switch(t.keyCode){case b:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case p:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(g,e.target,e)},onFocus:function(){return v(n)},onClick:function(){return v(n)}},t)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter((function(e){return e.props.value===y}))[0]))}}}]);